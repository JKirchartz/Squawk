Squawk is a minimalistic 8-bit software synthesizer & playroutine library for Arduino.

The approach to generating sound is very simple - much akin to 80's game consoles.
It follows that Squawk sounds very much like an old-school 8-bit video game.

Why? Because simple is also fast.

The library is designed to play music "in the background".
Simply tell Squawk to start playing music, then go about your business and do whatever else you want your sketch to do. The music will keep playing until you tell it to stop.

Depending on the sample rate (quality), Squawk will use between 10% and 40% of the average Arduino CPU time. That leaves you with plenty of room to run your other tasks.


Contributors:
  Philip Linde - mod conversion, music
  Davey Taylor - the rest

Thanks to:
  Fredrik Ericsson
  Linus Åkesson
  David Cuartielles
  

How to make music for Squawk:

Music is made using a tracker that can handle ProTracker files.
A tracker is a type of music composing software.
ProTracker is a music format that was popular on the Amiga 500.

There are many modern trackers that are capable of composing music in this format and we recommend you have a look at OpenMPT or Milkytracker.

If you are unfamiliar with trackers, you will need to refer to the manual for the tracker you choose.

When tracking your music, start with the template.mod file, and follow a few additional rules:

1) Do not modify the template instruments/samples
2) Only use instrument 1 in channel 1, 2 in ch. 2, and so on
3) Only use even numbers for parameters on volume related commands
4) Don't use advanced looping (regular jumps/breaks are ok)
5) Don't change tempo (changing speed is ok)
6) Put no more than 64 patterns in your pattern list

Have a look at the music in convert/music for example ProTracker modules.


How to get your music onto your Arduino:

Squawk requires your ProTracker files to be converted into Squawk melodies.

Melodies come in two flavors:
* As data you put in your sketch and downloads with the code (sketches/Squawk_player).
* As a file on an SD card connected to your Arduino (sketches/SquawkSD_player).

Both formats can be generated by converter in the convert/ directory.

If you have an SD card connected to your Arduino, you can also have the Arduino convert your files directly on the SD card (sketches/SquawkSD_convert).


Building the hardware:

The simplest way of testing things out is to connect a piezo speaker between GND and the chosen output pin.
The Squawk_player sketch is tuned to frequencies suitable for a small boxed piezo speaker.

It is also possible to connect output to a speaker system, but this requires a few additional components:

PIN 3 ____1 Kohm________| |____ AUDIO OUT
          \/\/\/   _|_  | | 1uF
              20 nF___
GND   ______________|__________ AUDIO GND

This is a first order low-pass filter to "smooth out" the PWM carrier frequency.